{"version":3,"sources":["store/actions.js","config.js","components/imgThumb.component.js","components/imgList.component.js","components/pages/dashboard.page.js","components/pages/addDocument.page.js","components/pages/editDocument.page.js","components/pages/login.page.js","components/logoutLink.component.js","App.js","serviceWorker.js","models/basicHttpResponse.js","models/imageDocument.js","models/imageDocumentResponse.js","models/imageDocumentsResponse.js","store/store.js","models/authUserResponse.js","store/documents.reducer.js","store/auth.reducer.js","store/root.reducer.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","userProfile","db","firestore","imgThumb","onClickHandler","e","_this","props","deleteDocument","image","_this$props$image","this","id","url","title","content","react_default","a","createElement","src","style","maxWidth","alt","onClick","react_router_dom","to","Component","connect","dispatch","document","getState","type","loading","collection","doc","delete","then","response","catch","error","ImgList","list","map","img","imgThumb_component","key","DashboardPage","getDocuments","_this$props","serverError","isAuth","authLoaded","react_router","imgList_component","state","getImageDocumensStore","isLoading","getServerError","auth","authUserStore","isUserAuth","isLoaded","orderBy","get","documentSnapshots","documents","docs","dc","Object","objectSpread","data","reverse","AddDocumentPage","onInputChange","setState","defineProperty","target","value","onInputFileInput","selectedFiles","assertThisInitialized","length","file","reader","FileReader","readAsDataURL","onload","result","onerror","console","log","onFormSubmit","preventDefault","newDocument","createDate","Date","getTime","createDocument","history","push","_this2","_this$state","onSubmit","dist_es","onDrop","_ref","getRootProps","isDragActive","getInputProps","isDragReject","rejectedFiles","htmlFor","onChange","files","add","EditDocumentPage","componentWillReceiveProps","nextProps","getImageDocumentStore","imgDoc","_nextProps$getImageDo","componentWillMount","getDocument","match","params","editDocument","_this$state2","hasServerError","isloaded","documentId","erorr","update","LoginPage","email","password","login","creds","credentials","signInWithEmailAndPassword","user","_e$user","displayName","emailVerified","photoURL","isAnonymous","uid","providerData","err","LogoutLink","logout","href","signOut","App","realTimeUpdate","className","logoutLink_component","exact","path","component","onSnapshot","includeMetadataChanges","onAuthStateChanged","Boolean","window","location","hostname","BasicHttpResponse","_response","ImageDocument","classCallCheck","setImageDocument","ImageDocumentResponse","possibleConstructorReturn","getPrototypeOf","call","setResponse","ImageDocumentsResponse","imgDocs","filter","initState","logedUser","deleteImageDocumentStore","editImageDocumentStore","createImageDocumentStore","documentReducer","arguments","undefined","action","setLoading","setServerError","setImageDocuments","authReducer","setAuthUser","logOut","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.903a43c3.chunk.js","sourcesContent":["import firebase from 'firebase/app'\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport { firebaseConf } from '../config';\n\n// Initialize Cloud Firestore through Firebase\nfirebase.initializeApp(firebaseConf);\n\nconst db = firebase.firestore();\n\nexport const realTimeUpdate = () => {\n    return (dispatch, getState) => {\n        db.collection(\"imageDocuments\").orderBy(\"createDate\")\n            .onSnapshot({\n                // Listen for document metadata changes\n                includeMetadataChanges: true\n            }, function (documentSnapshots) {\n\n                // console.log(\"Real time imageDocuments changes\")\n                // var hasPendingWrites = documentSnapshots.metadata.hasPendingWrites;\n\n                // console.log(`Has pending writes: ${hasPendingWrites}`)\n\n                // if (hasPendingWrites) {\n                //     return;\n                // }\n            \n\n                var documents = documentSnapshots.docs.map((dc) => {\n                    return {\n                        ...dc.data(),\n                        id: dc.id\n                    }\n                }).reverse();\n                dispatch({ type: 'GET_DOCUMENTS', documents });\n\n            });\n\n        firebase.auth().onAuthStateChanged(function (user) {\n\n            // console.log(\"Real time User changes\")\n            if (user) {\n                // User is signed in.\n                const { displayName, email, emailVerified, photoURL, isAnonymous, uid, providerData } = user;\n                dispatch({\n                    type: 'USER_LOGEDIN',\n                    user: { displayName, email, emailVerified, photoURL, isAnonymous, uid, providerData }\n                });\n            } else {\n                dispatch({\n                    type: 'USER_LOGEDOUT'\n                });\n            }\n        });\n    }\n}\n\nexport const createDocument = (document) => {\n    return (dispatch, getState) => {\n\n        dispatch({\n            type: 'CREATE_DOCUMENT',\n            loading: true\n        });\n        // make async call to database\n        db.collection(\"imageDocuments\").add(document)\n            .then((response) => {\n                dispatch({\n                    type: 'CREATE_DOCUMENT',\n                    document: {\n                        ...document,\n                        id: response.id\n                    }\n                });\n            }).catch((error) => {\n                dispatch({\n                    type: 'CREATE_DOCUMENT',\n                    error: error\n                });\n            })\n    }\n};\n\nexport const getDocuments = () => {\n    return (dispatch, getState) => {\n        // make async call to database\n        dispatch({ type: 'GET_DOCUMENTS', loading: true });\n\n        db.collection(\"imageDocuments\")\n            .orderBy(\"createDate\").get().then(function (documentSnapshots) {\n\n                var documents = documentSnapshots.docs.map((dc) => {\n                    return {\n                        ...dc.data(),\n                        id: dc.id\n                    }\n                }).reverse();\n\n                dispatch({ type: 'GET_DOCUMENTS', documents });\n\n            }).catch((error) => {\n                dispatch({ type: 'GET_DOCUMENTS', error: error });\n            })\n    }\n};\n\nexport const deleteDocument = (document) => {\n    return (dispatch, getState) => {\n\n        dispatch({\n            type: 'DELETE_DOCUMENT', loading: true\n        });\n        // make async call to database\n        db.collection(\"imageDocuments\").doc(document.id).delete()\n            .then((response) => {\n                dispatch({\n                    type: 'DELETE_DOCUMENT',\n                    document\n                });\n            }).catch((error) => {\n                dispatch({\n                    type: 'DELETE_DOCUMENT',\n                    error: error\n                });\n            })\n    }\n};\n\nexport const getDocument = (id) => {\n    return (dispatch, getState) => {\n\n        // make async call to database\n        dispatch({ type: 'GET_DOCUMENT', loading: true });\n        db.collection(\"imageDocuments\")\n            .doc(id).get()\n            .then(function (documentSnapshots) {\n                dispatch({ type: 'GET_DOCUMENT', document: { id: documentSnapshots.id, ...documentSnapshots.data() } })\n\n            }).catch((error) => {\n                dispatch({ type: 'GET_DOCUMENT', erorr: error });\n                console.log(error);\n            })\n    }\n}\n\nexport const editDocument = (document) => {\n    return (dispatch, getState) => {\n\n        // // make async call to database\n        db.collection(\"imageDocuments\").doc(document.id).update(document)\n            .then((response) => {\n\n            }).catch((error) => {\n                dispatch({ type: 'GET_DOCUMENTS_SERVER_ERROR' });\n            })\n    }\n}\n\nexport const login = (credentials) => {\n    return (dispatch, getState) => {\n\n        // const firebase = getFirebase();\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then((e) => {\n\n            // console.log(e.user)\n            if (e.user) {\n                // User is signed in.\n                const { displayName, email, emailVerified, photoURL, isAnonymous, uid, providerData } = e.user;\n                dispatch({\n                    type: 'USER_LOGEDIN',\n                    user: { displayName, email, emailVerified, photoURL, isAnonymous, uid, providerData }\n                });\n            }\n        }).catch((err) => {\n            console.log(\"Login error\")\n        });\n    }\n}\n\nexport const logout = () => {\n    return (dispatch, getState) => {\n        firebase.auth().signOut().then(() => {\n            dispatch({\n                type: 'USER_LOGEDOUT'\n            });\n        }).catch((err) => {\n            console.log(\"Logout error\")\n        });\n    }\n}","\nexport const firebaseConf = {\n    apiKey: \"AIzaSyDYefnvwm3HhhnufJ0X6TDmduJ9m8lcdbg\",\n    authDomain: \"p-project-6eb83.firebaseapp.com\",\n    databaseURL: \"https://p-project-6eb83.firebaseio.com\",\n    projectId: \"p-project-6eb83\",\n    storageBucket: \"p-project-6eb83.appspot.com\",\n    messagingSenderId: \"571066696652\",\n    appId: \"1:571066696652:web:a2f2aa637e6c7e4a\",\n    userProfile: null\n}\n","import React, {Component} from 'react';\nimport {connect} from 'react-redux';\nimport {deleteDocument} from '../store/actions';\nimport {Link} from 'react-router-dom';\n\nclass imgThumb extends Component {\n\n    onClickHandler =  (e) =>{\n        this.props.deleteDocument(this.props.image);\n    }\n    \n    render(){\n        const {id, url, title, content}  = this.props.image;\n        return (\n            <div>\n                <h5>{title} - {id}</h5>\n                <p>{content}</p>\n                <img src={url} style={{maxWidth: '100%'}} alt={title}/>\n                <button onClick={this.onClickHandler}>Delete</button> \n                <Link to={'edit/' + id}>Edit</Link>\n            </div>\n        )\n    }\n    \n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        deleteDocument: (document) => dispatch(deleteDocument(document))\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(imgThumb);\n\n","import React, {Component} from 'react';\n\nimport ImgThumb from './imgThumb.component';\n\n\nclass ImgList extends Component {\n    render(){\n        const {list} = this.props;\n        return (\n            <div>\n                {list && list.map((img) => (<ImgThumb image={img} key={img.id}/>))}\n            </div>\n        )\n    }\n}\n\nexport default ImgList;","import React, { Component } from 'react';\nimport ImgList from '../imgList.component'\nimport { connect } from 'react-redux'\nimport {getDocuments} from '../../store/actions'\nimport {Link, Redirect} from 'react-router-dom'\n\n\nclass DashboardPage extends Component {\n\n    componentWillMount() {\n        this.props.getDocuments();\n    }\n   \n    render() {\n        const {list, loading, serverError} = this.props;\n\n        if(!this.props.isAuth && this.props.authLoaded){\n            return (<Redirect to='/login'/>)\n        }\n        \n        return (\n            <div>\n                <h1>Galery</h1>\n                <Link to=\"/create\">Create new </Link>\n                {loading && (<div>loading...</div>)}\n                {serverError && (<div>Server error!</div>)}\n                {list && (<ImgList list={list} />)}\n                \n            </div>\n        );\n    }\n}\n\nconst mapStateToProp = (state) => {\n    return {\n        list: state.document.getImageDocumensStore.getDocuments(),\n        loading: state.document.getImageDocumensStore.isLoading(),\n        serverError: state.document.getImageDocumensStore.getServerError(),\n        isAuth: state.auth.authUserStore.isUserAuth(),\n        authLoaded: state.auth.authUserStore.isLoaded()\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getDocuments: () => dispatch(getDocuments())\n    }\n}\n\nexport default connect(mapStateToProp, mapDispatchToProps)(DashboardPage);","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { createDocument } from '../../store/actions'\nimport Dropzone from 'react-dropzone'\nimport { Redirect } from 'react-router-dom'\n\nclass AddDocumentPage extends Component {\n\n    state = {\n        title: '',\n        content: '',\n        url: ''\n    }\n\n    onInputChange = (e) => {\n        this.setState({ [e.target.id]: e.target.value });\n    }\n\n    onInputFileInput = (selectedFiles) => {\n\n        let state = this;\n        if (selectedFiles.length > 0) {\n            const file = selectedFiles[0];\n            let reader = new FileReader();\n            reader.readAsDataURL(file);\n            reader.onload = function () {\n                state.setState({ url: reader.result })\n            };\n            reader.onerror = function (error) {\n                console.log('Error: ', error);\n            };\n        }\n    }\n\n    onFormSubmit = (e) => {\n        e.preventDefault();\n\n        // const id = new Date().getTime()\n        const newDocument = { ...this.state, createDate: new Date().getTime() };\n\n        this.setState({\n            title: '',\n            content: '',\n            url: ''\n        });\n\n        this.props.createDocument({ ...newDocument })\n        this.props.history.push('/');\n    }\n\n    render() {\n\n        const { title, content, url } = this.state;\n\n        if (!this.props.isAuth && this.props.authLoaded) {\n            return (<Redirect to='/login' />)\n        }\n\n        return (\n            <div>\n                <h1>Add to gallery</h1>\n                <form onSubmit={this.onFormSubmit}>\n                    <Dropzone\n                        onDrop={this.onInputFileInput}>\n                        {({ getRootProps, getInputProps, isDragActive, isDragReject, rejectedFiles }) => (\n\n                            <div {...getRootProps()}>\n                                {isDragActive && (<span>Is drag active</span>)}\n                                {isDragReject && (<span>Is drag reject</span>)}\n                                {rejectedFiles && (<span>Rejected files</span>)}\n\n                                <div>\n                                    <label htmlFor=\"title\">Title: </label>\n                                    <input type=\"text\" id=\"title\" value={title} onChange={this.onInputChange} />\n                                </div>\n                                <div>\n                                    <label htmlFor=\"content\">Description: </label>\n                                    <input type=\"text\" id=\"content\" value={content} onChange={this.onInputChange} />\n                                </div>\n                                <div>\n                                    <label htmlFor=\"url\">Url: </label>\n                                    <input type=\"text\" id=\"url\" value={url} onChange={this.onInputChange} />\n                                </div>\n\n                                {url && (\n\n                                    <div>\n                                        <img src={url} alt={title} />\n                                    </div>\n                                )}\n                            </div>\n                        )}\n                    </Dropzone>\n                    <div>\n                        <label htmlFor=\"file\">File: </label>\n                        <input\n                            type=\"file\"\n                            id=\"file\"\n                            onChange={(e) => this.onInputFileInput(e.target.files)} />\n                    </div>\n\n                    <button type=\"submit\">add</button>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        createDocument: (document) => dispatch(createDocument(document))\n    }\n}\n\nconst mapStateToParams = state => {\n    return {\n        isAuth: state.auth.authUserStore.isUserAuth(),\n        authLoaded: state.auth.authUserStore.isLoaded()\n    }\n}\n\nexport default connect(mapStateToParams, mapDispatchToProps)(AddDocumentPage);\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { getDocument, editDocument } from '../../store/actions'\nimport { Redirect } from 'react-router-dom'\n\n\nclass EditDocumentPage extends Component {\n\n    state = {\n        title: '',\n        content: '',\n        url: '',\n        id: ''\n    }\n\n    componentWillReceiveProps = (nextProps) => {\n        if (nextProps.getImageDocumentStore && nextProps.getImageDocumentStore.imgDoc) {\n            const { title, content, url, id } = nextProps.getImageDocumentStore.imgDoc;\n            this.setState({ title, content, url, id });\n        }\n    }\n\n    componentWillMount = (e) => {\n        this.props.getDocument(this.props.match.params.id);\n    }\n\n    onInputChange = (e) => {\n        this.setState({ [e.target.id]: e.target.value });\n    }\n\n    onFormSubmit = (e) => {\n        e.preventDefault();\n\n        const { title, content, id } = this.state;\n        const newDocument = { title, content, id };\n\n        this.setState({\n            title: '',\n            content: '',\n            url: '',\n            id: ''\n        });\n\n        this.props.editDocument({ ...newDocument })\n        this.props.history.push('/');\n    }\n\n    render() {\n\n        const { getImageDocumentStore } = this.props;\n        const { title, content, url } = this.state;\n\n        if (!this.props.isAuth && this.props.authLoaded) {\n            return (<Redirect to='/login' />)\n        }\n\n        return (\n            <div>\n                <h1>Add to gallery</h1>\n\n                {!getImageDocumentStore.isLoaded() && (<div>loading...</div>)}\n                {getImageDocumentStore.hasServerError() && (<div>Server error!</div>)}\n\n                {\n                    getImageDocumentStore.isLoaded() &&\n                    (\n                        <form onSubmit={this.onFormSubmit}>\n\n                            <div>\n                                <label htmlFor=\"title\">Title: </label>\n                                <input type=\"text\" id=\"title\" value={title} onChange={this.onInputChange} />\n                            </div>\n                            <div>\n                                <label htmlFor=\"content\">Description: </label>\n                                <input type=\"text\" id=\"content\" value={content} onChange={this.onInputChange} />\n                            </div>\n                            <img src={url} alt={title} />\n\n                            <button type=\"submit\">edit</button>\n                        </form>\n                    )\n                }\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getDocument: (documentId) => dispatch(getDocument(documentId)),\n        editDocument: (document) => dispatch(editDocument(document))\n    }\n}\n\nconst mapStateToProps = (state) => {\n\n    return {\n        isloaded: state.document.getImageDocumentStore.isLoaded(),\n        getImageDocumentStore: state.document.getImageDocumentStore,\n        isAuth: state.auth.authUserStore.isUserAuth(),\n        authLoaded: state.auth.authUserStore.isLoaded()\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditDocumentPage);\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { login } from '../../store/actions'\nimport { Redirect } from 'react-router-dom';\n\nclass LoginPage extends Component {\n\n    state = {\n        email: '',\n        password: ''\n    }\n\n    onInputChange = (e) => {\n        this.setState({ [e.target.id]: e.target.value })\n    }\n\n    onFormSubmit = (e) => {\n        e.preventDefault()\n        this.props.login({ email: this.state.email, password: this.state.password })\n    }\n\n    render() {\n\n        const { email, password } = this.state;\n\n        const { authLoaded, isAuth } = this.props;\n\n        if (authLoaded && isAuth) {\n            return (<Redirect to='/' />)\n        }\n\n        return (\n            <div>\n                <h1>Login</h1>\n\n                <form onSubmit={this.onFormSubmit}>\n\n                    <div>\n                        <label htmlFor=\"email\">Email: </label>\n                        <input type=\"email\" id=\"email\" value={email} onChange={this.onInputChange} />\n                    </div>\n                    <div>\n                        <label htmlFor=\"Password\">Password: </label>\n                        <input type=\"password\" id=\"password\" value={password} onChange={this.onInputChange} />\n                    </div>\n\n                    <button type=\"submit\">login</button>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isAuth: state.auth.authUserStore.isUserAuth(),\n        authLoaded: state.auth.authUserStore.isLoaded()\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        login: (creds) => dispatch(login(creds)),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage)","import React, { Component } from 'react'\nimport {connect} from 'react-redux'\n\nimport {logout} from '../store/actions'\n\nclass LogoutLink extends Component {\n\n    logout = () =>{\n        this.props.logout();\n    }\n    render() {\n        return (<a href='/#' onClick={this.logout}>log out</a>)\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        logout: () => dispatch(logout()),\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(LogoutLink);","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport './App.css';\n\nimport { realTimeUpdate } from './store/actions'\nimport DashboardPage from './components/pages/dashboard.page';\nimport AddDocumentPage from './components/pages/addDocument.page';\nimport EditDocumentPage from './components/pages/editDocument.page'\nimport LoginPage from './components/pages/login.page'\nimport LogoutLinkComponent from './components/logoutLink.component';\n\n\nclass App extends Component {\n  \n  componentWillMount() {\n    this.props.realTimeUpdate();\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <LogoutLinkComponent />\n          <Switch>\n            <Route exact path='/login' component={LoginPage} />\n            <Route exact path='/' component={DashboardPage} />\n            <Route path='/create' component={AddDocumentPage} />\n            <Route path='/edit/:id' component={EditDocumentPage} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    realTimeUpdate: () => dispatch(realTimeUpdate())\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\nclass BasicHttpResponse {\n\n    loading;\n\n    serverError;\n\n    _response;\n\n    constractor() {\n        this.loading = false;\n        this.serverError = '';\n        this._response = null;\n\n    }\n\n    setLoading() {\n        this.loading = true;\n        this.serverError = null;\n        this._response = null;\n    }\n\n    setServerError(error) {\n        this.loading = false;\n        this.serverError = error;\n        this._response = null;\n    }\n\n    setResponse(response) {\n        this.loading = false;\n        this.serverError = '';\n        this._response = response;\n    }\n\n    \n    isLoaded = () => {\n        return !this.loading;\n    }\n\n    isLoading = () => {\n        return this.loading;\n    }\n\n    getServerError = () => {\n        return this.serverError;\n    }\n\n    hasServerError = () => {\n        return this.isLoaded() && this.serverError !== '';\n    }\n\n}\n\nexport default BasicHttpResponse;","\nclass ImageDocument {\n\n    \n    title;\n    url;\n    id;\n    content;\n\n    constructor(title, url, id, content){\n        this.title = title;\n        this.url = url;\n        this.id = id;\n        this.content = content;\n    }\n\n    setImageDocument = (title, url, id, content) => {\n        this.title = title;\n        this.url = url;\n        this.id = id;\n        this.content = content;\n    \n    }\n}\n\nexport default ImageDocument;","import BasicHttpResponse from './basicHttpResponse';\nimport ImageDocument from './imageDocument';\n\nclass ImageDocumentResponse extends BasicHttpResponse{\n\n    imgDoc;\n\n    constructor(){\n        super();\n        this.imgDoc = new ImageDocument();\n    }\n\n    setImageDocument = (response) => {\n        this.setResponse(response)\n        const {title, url, id, content} = response\n        this.imgDoc.setImageDocument(title, url, id, content)\n    }\n\n}\n\nexport default ImageDocumentResponse;","import BasicHttpResponse from './basicHttpResponse';\nimport ImageDocument from './imageDocument';\n\nclass ImageDocumentsResponse extends BasicHttpResponse {\n\n    imgDocs;\n\n    constructor(){\n        super();\n        this.imgDocs = [];\n    }\n\n\n    removeItem (document)  {\n        this.imgDocs = this.imgDocs.filter((doc)=> doc.id !== document.id);\n    }\n\n    setImageDocuments  (response) {\n        this.setResponse(response)\n        this.imgDocs = response.map( (doc) => {\n            const {title, url, id, content} = doc\n            return new ImageDocument(title, url, id, content)\n        });\n    }\n\n    getDocuments = () => {\n        return this.imgDocs;\n    }\n\n    \n}\n\nexport default ImageDocumentsResponse;","import ImageDocumentResponse from '../models/imageDocumentResponse';\nimport ImageDocumentsResponse from '../models/imageDocumentsResponse';\nimport AuthUserResponse from '../models/authUserResponse';\n\nconst initState = {\n    list: [],\n    loading: false,\n    serverError: false,\n    logedUser: {},\n    isAuth: false,\n    authLoaded: false,\n\n\n    authUserStore: new AuthUserResponse(),\n    getImageDocumensStore: new ImageDocumentsResponse(),\n    getImageDocumentStore: new ImageDocumentResponse(),\n    deleteImageDocumentStore: new ImageDocumentResponse(),\n    editImageDocumentStore: new ImageDocumentResponse(),\n    createImageDocumentStore: new ImageDocumentResponse()\n}\n\nexport default initState ","import BasicHttpResponse from './basicHttpResponse';\n\nclass AuthUserResponse extends BasicHttpResponse {\n\n\n    displayName;\n    email; \n    emailVerified;\n    photoURL; \n    isAnonymous; \n    uid; \n    providerData;\n\n\n    setAuthUser (response) {\n        this.setResponse(response);\n        const { displayName, email, emailVerified, photoURL, isAnonymous, uid, providerData } = response;\n        this.displayName = displayName;\n        this.email = email;\n        this.emailVerified = emailVerified;\n        this.photoURL = photoURL;\n        this.isAnonymous = isAnonymous;\n        this.uid = uid;\n        this.providerData = providerData;\n    }\n\n    logOut () {\n        this.displayName = null;\n        this.email = null;\n        this.emailVerified = null;\n        this.photoURL = null;\n        this.isAnonymous = null;\n        this.uid = null;\n        this.providerData = null;\n    }\n    isUserAuth = () =>{\n        return this.uid !== null\n    }\n\n}\n\nexport default AuthUserResponse;","import initState from './store';\n\n\nconst documentReducer = (state = initState, action) => {\n\n    switch (action.type) {\n\n        case \"USER_LOGEDIN\":\n            return {\n                ...state,\n                logedUser: action.user,\n                isAuth: true,\n                authLoaded: true\n            }\n        case \"USER_LOGEDOUT\":\n            return {\n                ...state,\n                logedUser: {},\n                isAuth: false,\n                authLoaded: true\n            }\n        case \"DELETE_DOCUMENT\":{\n\n            const {deleteImageDocumentStore} = state;\n\n            if(action.loading){\n                deleteImageDocumentStore.setLoading();\n            }else if(action.document){\n                deleteImageDocumentStore.setImageDocument(action.document);\n            }else if(action.error){\n                deleteImageDocumentStore.setServerError(action.error);\n            }\n\n            return {\n                ...state,\n                deleteImageDocumentStore\n            }\n\n        }\n            \n        case \"GET_DOCUMENT\": {\n            const { getImageDocumentStore } = state;\n\n            if (action.loading) {\n                getImageDocumentStore.setLoading();\n            }else if(action.document){\n                getImageDocumentStore.setImageDocument(action.document)\n            }else if(action.error){\n                getImageDocumentStore.setServerError(action.error);\n            }\n            return {\n                ...state,\n                getImageDocumentStore\n            }\n        }\n    \n        case \"GET_DOCUMENTS\":{\n            const { getImageDocumensStore } = state;\n            if(action.loading){\n                getImageDocumensStore.setLoading();\n            }else if (action.documents){\n                getImageDocumensStore.setImageDocuments(action.documents)\n            }else if (action.error){\n                getImageDocumensStore.setServerError(action.error);\n            }\n            return {\n                ...state,\n                getImageDocumensStore\n            }\n        }\n            \n        case \"CREATE_DOCUMENT\":{\n            \n            const {createImageDocumentStore} = state;\n            if(action.loading){\n                createImageDocumentStore.setLoading();\n            }else if (action.documents){\n                createImageDocumentStore.setImageDocuments(action.documents)\n            }else if (action.error){\n                createImageDocumentStore.setServerError(action.error);\n            }\n            return {\n                ...state,\n                createImageDocumentStore\n            }\n        }\n            \n        default:\n            return state\n    }\n}\n\nexport default documentReducer;","import initState from './store';\n\n\nconst authReducer = (state = initState, action) => {\n\n    switch (action.type) {\n\n        case \"USER_LOGEDIN\": {\n            const { authUserStore } = state\n            authUserStore.setAuthUser(action.user);\n            return {\n                ...state,\n                authReducer\n            }\n        }\n        case \"USER_LOGEDOUT\": {\n            const { authUserStore } = state\n            authUserStore.logOut();\n            return {\n                ...state,\n                authReducer\n            }\n        }\n        default:\n            return state\n    }\n}\n\nexport default authReducer;","import { combineReducers } from 'redux';\nimport documentReducer from './documents.reducer';\nimport authReducer from './auth.reducer';\n\nconst rootReducer = combineReducers({\n  document: documentReducer,\n  auth: authReducer\n});\n\nexport default rootReducer\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport rootReducer from './store/root.reducer';\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}