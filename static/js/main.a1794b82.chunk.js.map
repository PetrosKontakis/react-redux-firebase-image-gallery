{"version":3,"sources":["store/actions.js","config.js","components/imgThumb.component.js","components/imgList.component.js","components/linearLoader.component.js","components/pages/dashboard.page.js","components/pages/addDocument.page.js","components/pages/editDocument.page.js","components/pages/login.page.js","components/logoutLink.component.js","App.js","serviceWorker.js","models/basicHttpResponse.js","models/imageDocument.js","models/imageDocumentResponse.js","models/imageDocumentsResponse.js","store/store.js","models/authUserResponse.js","store/documents.reducer.js","store/auth.reducer.js","store/root.reducer.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","userProfile","db","firestore","imgThumb","onClickHandler","e","_this","props","deleteDocument","image","_this$props$image","this","id","url","title","content","react_default","a","createElement","className","src","alt","onClick","react_router_dom","to","Component","connect","dispatch","document","getState","type","loading","collection","doc","delete","then","response","catch","error","ImgList","list","map","img","imgThumb_component","key","LinearLoader","DashboardPage","getDocuments","_this$props","serverError","isAuth","authLoaded","react_router","linearLoader_component","imgList_component","state","getImageDocumensStore","isLoading","getServerError","auth","authUserStore","isUserAuth","isLoaded","orderBy","get","documentSnapshots","documents","docs","dc","Object","objectSpread","data","reverse","AddDocumentPage","onInputChange","setState","defineProperty","target","value","onInputFileInput","selectedFiles","assertThisInitialized","length","file","reader","FileReader","readAsDataURL","onload","result","onerror","console","log","onFormSubmit","preventDefault","newDocument","createDate","Date","getTime","createDocument","history","push","_this2","_this$state","onSubmit","dist_es","onDrop","_ref","getRootProps","isDragActive","getInputProps","isDragReject","rejectedFiles","htmlFor","onChange","style","width","files","add","EditDocumentPage","componentWillReceiveProps","nextProps","getImageDocumentStore","imgDoc","_nextProps$getImageDo","componentWillMount","getDocument","match","params","editDocument","_this$state2","Fragment","hasServerError","isloaded","documentId","erorr","update","LoginPage","email","password","login","creds","credentials","signInWithEmailAndPassword","user","_e$user","displayName","emailVerified","photoURL","isAnonymous","uid","providerData","err","LogoutLink","logout","isAuthLoaded","href","signOut","App","realTimeUpdate","logoutLink_component","exact","path","component","onSnapshot","includeMetadataChanges","onAuthStateChanged","Boolean","window","location","hostname","BasicHttpResponse","_response","ImageDocument","classCallCheck","setImageDocument","ImageDocumentResponse","possibleConstructorReturn","getPrototypeOf","call","setResponse","ImageDocumentsResponse","imgDocs","filter","initState","logedUser","deleteImageDocumentStore","editImageDocumentStore","createImageDocumentStore","documentReducer","arguments","undefined","action","setLoading","setServerError","setImageDocuments","authReducer","setAuthUser","logOut","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","es","src_App_0","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"uVAMAA,IAASC,cCLmB,CACxBC,OAAQ,0CACRC,WAAY,kCACZC,YAAa,yCACbC,UAAW,kBACXC,cAAe,8BACfC,kBAAmB,eACnBC,MAAO,sCACPC,YAAa,ODDjB,IAAMC,EAAKV,IAASW,YEHdC,6MAEFC,eAAiB,SAACC,GACdC,EAAKC,MAAMC,eAAeF,EAAKC,MAAME,gFAGhC,IAAAC,EAC+BC,KAAKJ,MAAME,MAAvCG,EADHF,EACGE,GAAIC,EADPH,EACOG,IAAKC,EADZJ,EACYI,MAAOC,EADnBL,EACmBK,QACxB,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAGXH,EAAAC,EAAAC,cAAA,OAAKE,IAAKP,EAAKQ,IAAKP,IAEpBE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4BACXH,EAAAC,EAAAC,cAAA,UAAKJ,EAAL,MAAeF,GACfI,EAAAC,EAAAC,cAAA,SAAIH,GACJC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAAcG,QAASX,KAAKP,gBAA9C,UACAY,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAMJ,UAAU,cAAcK,GAAI,QAAUZ,GAA5C,iBAlBGa,aAgCRC,cAAQ,KANI,SAAAC,GACvB,MAAO,CACHnB,eAAgB,SAACoB,GAAD,OAAcD,EFyER,SAACC,GAC3B,OAAO,SAACD,EAAUE,GAEdF,EAAS,CACLG,KAAM,kBAAmBC,SAAS,IAGtC9B,EAAG+B,WAAW,kBAAkBC,IAAIL,EAAShB,IAAIsB,SAC5CC,KAAK,SAACC,GACHT,EAAS,CACLG,KAAM,kBACNF,eAELS,MAAM,SAACC,GACNX,EAAS,CACLG,KAAM,kBACNQ,MAAOA,OEzFoB9B,CAAeoB,OAI/CF,CAAkCvB,GCrBlCoC,mLAVH,IACGC,EAAQ7B,KAAKJ,MAAbiC,KACP,OACIxB,EAAAC,EAAAC,cAAA,WACKsB,GAAQA,EAAKC,IAAI,SAACC,GAAD,OAAU1B,EAAAC,EAAAC,cAACyB,EAAD,CAAUlC,MAAOiC,EAAKE,IAAKF,EAAI9B,eALrDa,aCMPoB,SARM,SAAAtC,GACjB,OACIS,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAYH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAYH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WCE3E2B,+LAGEnC,KAAKJ,MAAMwC,gDAGN,IAAAC,EACkCrC,KAAKJ,MAApCiC,EADHQ,EACGR,KAAMT,EADTiB,EACSjB,QAASkB,EADlBD,EACkBC,YAEvB,OAAKtC,KAAKJ,MAAM2C,QAAUvC,KAAKJ,MAAM4C,WACzBnC,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAU5B,GAAG,WAIrBR,EAAAC,EAAAC,cAAA,WACKa,GAAYf,EAAAC,EAAAC,cAACmC,EAAD,MACbrC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,WACC+B,GAAgBjC,EAAAC,EAAAC,cAAA,4BAChBsB,GAASxB,EAAAC,EAAAC,cAACoC,EAAD,CAASd,KAAMA,aAnBjBf,aA0CbC,cAhBQ,SAAC6B,GACpB,MAAO,CACHf,KAAMe,EAAM3B,SAAS4B,sBAAsBT,eAC3ChB,QAASwB,EAAM3B,SAAS4B,sBAAsBC,YAC9CR,YAAaM,EAAM3B,SAAS4B,sBAAsBE,iBAClDR,OAAQK,EAAMI,KAAKC,cAAcC,aACjCV,WAAYI,EAAMI,KAAKC,cAAcE,aAIlB,SAAAnC,GACvB,MAAO,CACHoB,aAAc,kBAAMpB,ELsCjB,SAACA,EAAUE,GAEdF,EAAS,CAAEG,KAAM,gBAAiBC,SAAS,IAE3C9B,EAAG+B,WAAW,kBACT+B,QAAQ,cAAcC,MAAM7B,KAAK,SAAU8B,GAExC,IAAIC,EAAYD,EAAkBE,KAAK1B,IAAI,SAAC2B,GACxC,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACAD,EAAGG,OADV,CAEI3D,GAAIwD,EAAGxD,OAEZ4D,UAEH7C,EAAS,CAAEG,KAAM,gBAAiBoC,gBAEnC7B,MAAM,SAACC,GACNX,EAAS,CAAEG,KAAM,gBAAiBQ,MAAOA,WKnD1CZ,CAA4CoB,2BC5CrD2B,6MAEFlB,MAAQ,CACJzC,MAAO,GACPC,QAAS,GACTF,IAAK,MAGT6D,cAAgB,SAACrE,GACbC,EAAKqE,SAALN,OAAAO,EAAA,EAAAP,CAAA,GAAiBhE,EAAEwE,OAAOjE,GAAKP,EAAEwE,OAAOC,WAG5CC,iBAAmB,SAACC,GAEhB,IAAIzB,EAAKc,OAAAY,EAAA,EAAAZ,CAAA/D,GACT,GAAI0E,EAAcE,OAAS,EAAG,CAC1B,IAAMC,EAAOH,EAAc,GACvBI,EAAS,IAAIC,WACjBD,EAAOE,cAAcH,GACrBC,EAAOG,OAAS,WACZhC,EAAMoB,SAAS,CAAE9D,IAAKuE,EAAOI,UAEjCJ,EAAOK,QAAU,SAAUnD,GACvBoD,QAAQC,IAAI,UAAWrD,QAKnCsD,aAAe,SAACvF,GACZA,EAAEwF,iBAGF,IAAMC,EAAWzB,OAAAC,EAAA,EAAAD,CAAA,GAAQ/D,EAAKiD,MAAb,CAAoBwC,YAAY,IAAIC,MAAOC,YAE5D3F,EAAKqE,SAAS,CACV7D,MAAO,GACPC,QAAS,GACTF,IAAK,KAGTP,EAAKC,MAAM2F,eAAX7B,OAAAC,EAAA,EAAAD,CAAA,GAA+ByB,IAC/BxF,EAAKC,MAAM4F,QAAQC,KAAK,8EAGnB,IAAAC,EAAA1F,KAAA2F,EAE2B3F,KAAK4C,MAA7BzC,EAFHwF,EAEGxF,MAAOC,EAFVuF,EAEUvF,QAASF,EAFnByF,EAEmBzF,IAExB,OAAKF,KAAKJ,MAAM2C,QAAUvC,KAAKJ,MAAM4C,WACzBnC,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAU5B,GAAG,WAIrBR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBAAd,kBACAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,oBAAoBoF,SAAU5F,KAAKiF,cAC/C5E,EAAAC,EAAAC,cAACsF,EAAA,EAAD,CACIC,OAAQ9F,KAAKoE,kBACZ,SAAA2B,GAAA,IAAGC,EAAHD,EAAGC,aAA6BC,GAAhCF,EAAiBG,cAAjBH,EAAgCE,cAAcE,EAA9CJ,EAA8CI,aAAcC,EAA5DL,EAA4DK,cAA5D,OAEG/F,EAAAC,EAAAC,cAAA,MAASyF,IACJC,GAAiB5F,EAAAC,EAAAC,cAAA,8BACjB4F,GAAiB9F,EAAAC,EAAAC,cAAA,8BACjB6F,GAAkB/F,EAAAC,EAAAC,cAAA,8BAEnBF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,SAAO8F,QAAQ,SAAf,WACAhG,EAAAC,EAAAC,cAAA,SAAOY,KAAK,OAAOlB,GAAG,QAAQkE,MAAOhE,EAAOmG,SAAUZ,EAAK3B,iBAE/D1D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,SAAO8F,QAAQ,WAAf,iBACAhG,EAAAC,EAAAC,cAAA,SAAOY,KAAK,OAAOlB,GAAG,UAAUkE,MAAO/D,EAASkG,SAAUZ,EAAK3B,iBAEnE1D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,SAAO8F,QAAQ,OAAf,SACAhG,EAAAC,EAAAC,cAAA,SAAOY,KAAK,OAAOlB,GAAG,MAAMkE,MAAOjE,EAAKoG,SAAUZ,EAAK3B,iBAG1D7D,GACGG,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKE,IAAKP,EAAKQ,IAAKP,EAAOoG,MAAO,CAACC,MAAO,cAM9DnG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,SAAO8F,QAAQ,QAAf,UACAhG,EAAAC,EAAAC,cAAA,SACIY,KAAK,OACLlB,GAAG,OACHqG,SAAU,SAAC5G,GAAD,OAAOgG,EAAKtB,iBAAiB1E,EAAEwE,OAAOuC,WAGxDpG,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAAcW,KAAK,UAArC,gBA9FUL,aAkHfC,cAPU,SAAA6B,GACrB,MAAO,CACHL,OAAQK,EAAMI,KAAKC,cAAcC,aACjCV,WAAYI,EAAMI,KAAKC,cAAcE,aATlB,SAAAnC,GACvB,MAAO,CACHuE,eAAgB,SAACtE,GAAD,OAAcD,ENpDR,SAACC,GAC3B,OAAO,SAACD,EAAUE,GAEdF,EAAS,CACLG,KAAM,kBACNC,SAAS,IAGb9B,EAAG+B,WAAW,kBAAkBqF,IAAIzF,GAC/BO,KAAK,SAACC,GACHT,EAAS,CACLG,KAAM,kBACNF,SAASyC,OAAAC,EAAA,EAAAD,CAAA,GACFzC,EADC,CAEJhB,GAAIwB,EAASxB,SAGtByB,MAAM,SAACC,GACNX,EAAS,CACLG,KAAM,kBACNQ,MAAOA,OMgCoB4D,CAAetE,OAW/CF,CAA8C+C,GClHvD6C,6MAEF/D,MAAQ,CACJzC,MAAO,GACPC,QAAS,GACTF,IAAK,GACLD,GAAI,MAGR2G,0BAA4B,SAACC,GACzB,GAAIA,EAAUC,uBAAyBD,EAAUC,sBAAsBC,OAAQ,KAAAC,EACvCH,EAAUC,sBAAsBC,OAA5D5G,EADmE6G,EACnE7G,MAAOC,EAD4D4G,EAC5D5G,QAASF,EADmD8G,EACnD9G,IAAKD,EAD8C+G,EAC9C/G,GAC7BN,EAAKqE,SAAS,CAAE7D,QAAOC,UAASF,MAAKD,WAI7CgH,mBAAqB,SAACvH,GAClBC,EAAKC,MAAMsH,YAAYvH,EAAKC,MAAMuH,MAAMC,OAAOnH,OAGnD8D,cAAgB,SAACrE,GACbC,EAAKqE,SAALN,OAAAO,EAAA,EAAAP,CAAA,GAAiBhE,EAAEwE,OAAOjE,GAAKP,EAAEwE,OAAOC,WAG5Cc,aAAe,SAACvF,GACZA,EAAEwF,iBADgB,IAAAS,EAGahG,EAAKiD,MAC9BuC,EAAc,CAAEhF,MAJJwF,EAGVxF,MACqBC,QAJXuF,EAGHvF,QACuBH,GAJpB0F,EAGM1F,IAGxBN,EAAKqE,SAAS,CACV7D,MAAO,GACPC,QAAS,GACTF,IAAK,GACLD,GAAI,KAGRN,EAAKC,MAAMyH,aAAX3D,OAAAC,EAAA,EAAAD,CAAA,GAA6ByB,IAC7BxF,EAAKC,MAAM4F,QAAQC,KAAK,8EAGnB,IAEGqB,EAA0B9G,KAAKJ,MAA/BkH,sBAFHQ,EAG2BtH,KAAK4C,MAA7BzC,EAHHmH,EAGGnH,MAAOC,EAHVkH,EAGUlH,QAASF,EAHnBoH,EAGmBpH,IAExB,OAAKF,KAAKJ,MAAM2C,QAAUvC,KAAKJ,MAAM4C,WACzBnC,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAU5B,GAAG,WAIrBR,EAAAC,EAAAC,cAACF,EAAAC,EAAMiH,SAAP,MACMT,EAAsB3D,YAAe9C,EAAAC,EAAAC,cAACmC,EAAD,MACvCrC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAIVsG,EAAsBU,kBAAqBnH,EAAAC,EAAAC,cAAA,4BAGxCuG,EAAsB3D,YAElB9C,EAAAC,EAAAC,cAACF,EAAAC,EAAMiH,SAAP,KACIlH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBAAd,gBACAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,oBAAoBoF,SAAU5F,KAAKiF,cAE/C5E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,SAAO8F,QAAQ,SAAf,WACAhG,EAAAC,EAAAC,cAAA,SAAOY,KAAK,OAAOlB,GAAG,QAAQkE,MAAOhE,EAAOmG,SAAUtG,KAAK+D,iBAE/D1D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,SAAO8F,QAAQ,WAAf,iBACAhG,EAAAC,EAAAC,cAAA,SAAOY,KAAK,OAAOlB,GAAG,UAAUkE,MAAO/D,EAASkG,SAAUtG,KAAK+D,iBAEnE1D,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKE,IAAKP,EAAKQ,IAAKP,EAAOoG,MAAO,CAAEC,MAAO,WAE/CnG,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAAcW,KAAK,UAArC,mBA7ELL,aAyGhBC,cAVS,SAAC6B,GAErB,MAAO,CACH6E,SAAU7E,EAAM3B,SAAS6F,sBAAsB3D,WAC/C2D,sBAAuBlE,EAAM3B,SAAS6F,sBACtCvE,OAAQK,EAAMI,KAAKC,cAAcC,aACjCV,WAAYI,EAAMI,KAAKC,cAAcE,aAblB,SAAAnC,GACvB,MAAO,CACHkG,YAAa,SAACQ,GAAD,OAAgB1G,GPgCTf,EOhC8ByH,EPiC/C,SAAC1G,EAAUE,GAGdF,EAAS,CAAEG,KAAM,eAAgBC,SAAS,IAC1C9B,EAAG+B,WAAW,kBACTC,IAAIrB,GAAIoD,MACR7B,KAAK,SAAU8B,GACZtC,EAAS,CAAEG,KAAM,eAAgBF,SAASyC,OAAAC,EAAA,EAAAD,CAAA,CAAGzD,GAAIqD,EAAkBrD,IAAOqD,EAAkBM,YAE7FlC,MAAM,SAACC,GACNX,EAAS,CAAEG,KAAM,eAAgBwG,MAAOhG,IACxCoD,QAAQC,IAAIrD,QAZD,IAAC1B,GO/BpBoH,aAAc,SAACpG,GAAD,OAAcD,EPgDR,SAACC,GACzB,OAAO,SAACD,EAAUE,GAGd5B,EAAG+B,WAAW,kBAAkBC,IAAIL,EAAShB,IAAI2H,OAAO3G,GACnDO,KAAK,SAACC,MAEJC,MAAM,SAACC,GACNX,EAAS,CAAEG,KAAM,kCOxDYkG,CAAapG,OAc3CF,CAA6C4F,GC1GtDkB,6MAEFjF,MAAQ,CACJkF,MAAO,GACPC,SAAU,MAGdhE,cAAgB,SAACrE,GACbC,EAAKqE,SAALN,OAAAO,EAAA,EAAAP,CAAA,GAAiBhE,EAAEwE,OAAOjE,GAAKP,EAAEwE,OAAOC,WAG5Cc,aAAe,SAACvF,GACZA,EAAEwF,iBACFvF,EAAKC,MAAMoI,MAAM,CAAEF,MAAOnI,EAAKiD,MAAMkF,MAAOC,SAAUpI,EAAKiD,MAAMmF,oFAG5D,IAAApC,EAEuB3F,KAAK4C,MAAzBkF,EAFHnC,EAEGmC,MAAOC,EAFVpC,EAEUoC,SAFV1F,EAI0BrC,KAAKJ,MAA5B4C,EAJHH,EAIGG,WAAYD,EAJfF,EAIeE,OAEpB,OAAIC,GAAcD,EACNlC,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAU5B,GAAG,MAIrBR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBAAd,SAEAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,oBAAoBoF,SAAU5F,KAAKiF,cAE/C5E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,SAAO8F,QAAQ,SAAf,WACAhG,EAAAC,EAAAC,cAAA,SAAOY,KAAK,QAAQlB,GAAG,QAAQkE,MAAO2D,EAAOxB,SAAUtG,KAAK+D,iBAEhE1D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,SAAQ8F,QAAQ,YAAhB,cACAhG,EAAAC,EAAAC,cAAA,SAAOY,KAAK,WAAWlB,GAAG,WAAWkE,MAAO4D,EAAUzB,SAAUtG,KAAK+D,iBAGzE1D,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAAcW,KAAK,UAArC,kBAzCIL,aA6DTC,cAbS,SAAC6B,GACrB,MAAO,CACHL,OAAQK,EAAMI,KAAKC,cAAcC,aACjCV,WAAYI,EAAMI,KAAKC,cAAcE,aAIlB,SAAAnC,GACvB,MAAO,CACHgH,MAAO,SAACC,GAAD,OAAWjH,GRgGJkH,EQhGmBD,ERiG9B,SAACjH,EAAUE,GAGdtC,IAASoE,OAAOmF,2BACZD,EAAYJ,MACZI,EAAYH,UACdvG,KAAK,SAAC9B,GAGJ,GAAIA,EAAE0I,KAAM,KAAAC,EAEgF3I,EAAE0I,KAAlFE,EAFAD,EAEAC,YAAaR,EAFbO,EAEaP,MAAOS,EAFpBF,EAEoBE,cAAeC,EAFnCH,EAEmCG,SAAUC,EAF7CJ,EAE6CI,YAAaC,EAF1DL,EAE0DK,IAAKC,EAF/DN,EAE+DM,aACvE3H,EAAS,CACLG,KAAM,eACNiH,KAAM,CAAEE,cAAaR,QAAOS,gBAAeC,WAAUC,cAAaC,MAAKC,qBAGhFjH,MAAM,SAACkH,GACN7D,QAAQC,IAAI,oBAnBH,IAACkD,KQ5FPnH,CAA6C8G,GC5DtDgB,6MAEFC,OAAS,WACLnJ,EAAKC,MAAMkJ,kFAEN,IAAAzG,EAC4BrC,KAAKJ,MAA9B2C,EADHF,EACGE,OAAQwG,EADX1G,EACW0G,aAEhB,OACI1I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAEXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,yBACTH,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAMC,GAAG,KAAT,YAKH0B,GAAUwG,EACP1I,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4CAEXH,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAMJ,UAAU,cAAcK,GAAG,WAAjC,WAEAR,EAAAC,EAAAC,cAAA,KAAGyI,KAAK,KAAKxI,UAAU,cAAcG,QAASX,KAAK8I,QAAnD,YAEHzI,EAAAC,EAAAC,cAACF,EAAAC,EAAMiH,SAAP,eAzBAzG,aA8CVC,cARS,SAAA6B,GACpB,MAAO,CACHL,OAAQK,EAAMI,KAAKC,cAAcC,aACjC6F,aAAcnG,EAAMI,KAAKC,cAAcE,aARpB,SAAAnC,GACvB,MAAO,CACH8H,OAAQ,kBAAM9H,ET8IX,SAACA,EAAUE,GACdtC,IAASoE,OAAOiG,UAAUzH,KAAK,WAC3BR,EAAS,CACLG,KAAM,oBAEXO,MAAM,SAACkH,GACN7D,QAAQC,IAAI,uBSzITjE,CAA6C8H,GCvCtDK,+LAGFlJ,KAAKJ,MAAMuJ,kDAIX,OACE9I,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACEP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAC6I,EAAD,OAEF/I,EAAAC,EAAAC,cAACkC,EAAA,EAAD,KACEpC,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAO4G,OAAK,EAACC,KAAK,SAASC,UAAW1B,IACtCxH,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAO4G,OAAK,EAACC,KAAK,IAAIC,UAAWpH,IACjC9B,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAO6G,KAAK,UAAUC,UAAWzF,IACjCzD,EAAAC,EAAAC,cAACkC,EAAA,EAAD,CAAO6G,KAAK,YAAYC,UAAW5C,cAjB7B7F,aAiCHC,cAAQ,KANI,SAAAC,GACzB,MAAO,CACLmI,eAAgB,kBAAMnI,EV/Bf,SAACA,EAAUE,GACd5B,EAAG+B,WAAW,kBAAkB+B,QAAQ,cACnCoG,WAAW,CAERC,wBAAwB,GACzB,SAAUnG,GAYT,IAAIC,EAAYD,EAAkBE,KAAK1B,IAAI,SAAC2B,GACxC,OAAOC,OAAAC,EAAA,EAAAD,CAAA,GACAD,EAAGG,OADV,CAEI3D,GAAIwD,EAAGxD,OAEZ4D,UACH7C,EAAS,CAAEG,KAAM,gBAAiBoC,gBAI1C3E,IAASoE,OAAO0G,mBAAmB,SAAUtB,GAGzC,GAAIA,EAAM,KAEEE,EAAgFF,EAAhFE,YAAaR,EAAmEM,EAAnEN,MAAOS,EAA4DH,EAA5DG,cAAeC,EAA6CJ,EAA7CI,SAAUC,EAAmCL,EAAnCK,YAAaC,EAAsBN,EAAtBM,IAAKC,EAAiBP,EAAjBO,aACvE3H,EAAS,CACLG,KAAM,eACNiH,KAAM,CAAEE,cAAaR,QAAOS,gBAAeC,WAAUC,cAAaC,MAAKC,uBAG3E3H,EAAS,CACLG,KAAM,yBUJXJ,CAAkCmI,GClC7BS,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS3C,MACvB,uECmCS4C,8DAlBX5G,SAAW,WACP,OAAQxD,EAAKyB,cAGjB0B,UAAY,WACR,OAAOnD,EAAKyB,cAGhB2B,eAAiB,WACb,OAAOpD,EAAK2C,kBAGhBkF,eAAiB,WACb,OAAO7H,EAAKwD,YAAmC,KAArBxD,EAAK2C,uEAtC/BtC,KAAKoB,SAAU,EACfpB,KAAKsC,YAAc,GACnBtC,KAAKgK,UAAY,0CAKjBhK,KAAKoB,SAAU,EACfpB,KAAKsC,YAAc,KACnBtC,KAAKgK,UAAY,4CAGNrI,GACX3B,KAAKoB,SAAU,EACfpB,KAAKsC,YAAcX,EACnB3B,KAAKgK,UAAY,yCAGTvI,GACRzB,KAAKoB,SAAU,EACfpB,KAAKsC,YAAc,GACnBtC,KAAKgK,UAAYvI,WCNVwI,EAhBX,SAAAA,EAAY9J,EAAOD,EAAKD,EAAIG,GAAQ,IAAAT,EAAAK,KAAA0D,OAAAwG,EAAA,EAAAxG,CAAA1D,KAAAiK,GAAAjK,KAOpCmK,iBAAmB,SAAChK,EAAOD,EAAKD,EAAIG,GAChCT,EAAKQ,MAAQA,EACbR,EAAKO,IAAMA,EACXP,EAAKM,GAAKA,EACVN,EAAKS,QAAUA,GAVfJ,KAAKG,MAAQA,EACbH,KAAKE,IAAMA,EACXF,KAAKC,GAAKA,EACVD,KAAKI,QAAUA,GCORgK,cAbX,SAAAA,IAAa,IAAAzK,EAAA,OAAA+D,OAAAwG,EAAA,EAAAxG,CAAA1D,KAAAoK,IACTzK,EAAA+D,OAAA2G,EAAA,EAAA3G,CAAA1D,KAAA0D,OAAA4G,EAAA,EAAA5G,CAAA0G,GAAAG,KAAAvK,QAIJmK,iBAAmB,SAAC1I,GAChB9B,EAAK6K,YAAY/I,GADY,IAEtBtB,EAA2BsB,EAA3BtB,MAAOD,EAAoBuB,EAApBvB,IAAKD,EAAewB,EAAfxB,GAAIG,EAAWqB,EAAXrB,QACvBT,EAAKoH,OAAOoD,iBAAiBhK,EAAOD,EAAKD,EAAIG,IAN7CT,EAAKoH,OAAS,IAAIkD,EAFTtK,6BAJmBoK,GC6BrBU,cAzBX,SAAAA,IAAa,IAAA9K,EAAA,OAAA+D,OAAAwG,EAAA,EAAAxG,CAAA1D,KAAAyK,IACT9K,EAAA+D,OAAA2G,EAAA,EAAA3G,CAAA1D,KAAA0D,OAAA4G,EAAA,EAAA5G,CAAA+G,GAAAF,KAAAvK,QAiBJoC,aAAe,WACX,OAAOzC,EAAK+K,SAjBZ/K,EAAK+K,QAAU,GAFN/K,0EAMDsB,GACRjB,KAAK0K,QAAU1K,KAAK0K,QAAQC,OAAO,SAACrJ,GAAD,OAAQA,EAAIrB,KAAOgB,EAAShB,+CAG/CwB,GAChBzB,KAAKwK,YAAY/I,GACjBzB,KAAK0K,QAAUjJ,EAASK,IAAK,SAACR,GAAQ,IAC3BnB,EAA2BmB,EAA3BnB,MAAOD,EAAoBoB,EAApBpB,IAAKD,EAAeqB,EAAfrB,GAAIG,EAAWkB,EAAXlB,QACvB,OAAO,IAAI6J,EAAc9J,EAAOD,EAAKD,EAAIG,YAlBhB2J,GCkBtBa,EAjBG,CACd/I,KAAM,GACNT,SAAS,EACTkB,aAAa,EACbuI,UAAW,GACXtI,QAAQ,EACRC,YAAY,EAGZS,cAAe,+MCsBfC,WAAa,WACT,OAAoB,OAAbvD,EAAK+I,gFAtBHjH,GACTzB,KAAKwK,YAAY/I,GADE,IAEX6G,EAAgF7G,EAAhF6G,YAAaR,EAAmErG,EAAnEqG,MAAOS,EAA4D9G,EAA5D8G,cAAeC,EAA6C/G,EAA7C+G,SAAUC,EAAmChH,EAAnCgH,YAAaC,EAAsBjH,EAAtBiH,IAAKC,EAAiBlH,EAAjBkH,aACvE3I,KAAKsI,YAAcA,EACnBtI,KAAK8H,MAAQA,EACb9H,KAAKuI,cAAgBA,EACrBvI,KAAKwI,SAAWA,EAChBxI,KAAKyI,YAAcA,EACnBzI,KAAK0I,IAAMA,EACX1I,KAAK2I,aAAeA,mCAIpB3I,KAAKsI,YAAc,KACnBtI,KAAK8H,MAAQ,KACb9H,KAAKuI,cAAgB,KACrBvI,KAAKwI,SAAW,KAChBxI,KAAKyI,YAAc,KACnBzI,KAAK0I,IAAM,KACX1I,KAAK2I,aAAe,YA/BGoB,IDY3BlH,sBAAuB,IAAI4H,EAC3B3D,sBAAuB,IAAIsD,EAC3BU,yBAA0B,IAAIV,EAC9BW,uBAAwB,IAAIX,EAC5BY,yBAA0B,IAAIZ,GE0EnBa,EAzFS,WAA+B,IAA9BrI,EAA8BsI,UAAA3G,OAAA,QAAA4G,IAAAD,UAAA,GAAAA,UAAA,GAAtBN,EAAWQ,EAAWF,UAAA3G,OAAA,EAAA2G,UAAA,QAAAC,EAEnD,OAAQC,EAAOjK,MAEX,IAAK,eACD,OAAOuC,OAAAC,EAAA,EAAAD,CAAA,GACAd,EADP,CAEIiI,UAAWO,EAAOhD,KAClB7F,QAAQ,EACRC,YAAY,IAEpB,IAAK,gBACD,OAAOkB,OAAAC,EAAA,EAAAD,CAAA,GACAd,EADP,CAEIiI,UAAW,GACXtI,QAAQ,EACRC,YAAY,IAEpB,IAAK,kBAAkB,IAEZsI,EAA4BlI,EAA5BkI,yBAUP,OARGM,EAAOhK,QACN0J,EAAyBO,aACpBD,EAAOnK,SACZ6J,EAAyBX,iBAAiBiB,EAAOnK,UAC5CmK,EAAOzJ,OACZmJ,EAAyBQ,eAAeF,EAAOzJ,OAG5C+B,OAAAC,EAAA,EAAAD,CAAA,GACAd,EADP,CAEIkI,6BAKR,IAAK,eAAgB,IACThE,EAA0BlE,EAA1BkE,sBASR,OAPIsE,EAAOhK,QACP0F,EAAsBuE,aACjBD,EAAOnK,SACZ6F,EAAsBqD,iBAAiBiB,EAAOnK,UACzCmK,EAAOzJ,OACZmF,EAAsBwE,eAAeF,EAAOzJ,OAEzC+B,OAAAC,EAAA,EAAAD,CAAA,GACAd,EADP,CAEIkE,0BAIR,IAAK,gBAAgB,IACTjE,EAA0BD,EAA1BC,sBAQR,OAPGuI,EAAOhK,QACNyB,EAAsBwI,aAChBD,EAAO7H,UACbV,EAAsB0I,kBAAkBH,EAAO7H,WACzC6H,EAAOzJ,OACbkB,EAAsByI,eAAeF,EAAOzJ,OAEzC+B,OAAAC,EAAA,EAAAD,CAAA,GACAd,EADP,CAEIC,0BAIR,IAAK,kBAAkB,IAEZmI,EAA4BpI,EAA5BoI,yBAQP,OAPGI,EAAOhK,QACN4J,EAAyBK,aACnBD,EAAO7H,UACbyH,EAAyBO,kBAAkBH,EAAO7H,WAC5C6H,EAAOzJ,OACbqJ,EAAyBM,eAAeF,EAAOzJ,OAE5C+B,OAAAC,EAAA,EAAAD,CAAA,GACAd,EADP,CAEIoI,6BAIR,QACI,OAAOpI,IC5DJ4I,EAzBK,SAAdA,IAA6C,IAA9B5I,EAA8BsI,UAAA3G,OAAA,QAAA4G,IAAAD,UAAA,GAAAA,UAAA,GAAtBN,EAAWQ,EAAWF,UAAA3G,OAAA,EAAA2G,UAAA,QAAAC,EAE/C,OAAQC,EAAOjK,MAEX,IAAK,eAGD,OAF0ByB,EAAlBK,cACMwI,YAAYL,EAAOhD,MAC1B1E,OAAAC,EAAA,EAAAD,CAAA,GACAd,EADP,CAEI4I,gBAGR,IAAK,gBAGD,OAF0B5I,EAAlBK,cACMyI,SACPhI,OAAAC,EAAA,EAAAD,CAAA,GACAd,EADP,CAEI4I,gBAGR,QACI,OAAO5I,ICfJ+I,EALKC,YAAgB,CAClC3K,SAAUgK,EACVjI,KAAMwI,YCIFK,EAAQC,YAAYH,EAAaI,YAAgBC,MAEvDC,IAASC,OAAO7L,EAAAC,EAAAC,cAAC4L,EAAA,EAAD,CAAUN,MAAOA,GAAOxL,EAAAC,EAAAC,cAAC6L,EAAD,OAAoBnL,SAASoL,eAAe,SVqH9E,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMhL,KAAK,SAAAiL,GACjCA,EAAaC","file":"static/js/main.a1794b82.chunk.js","sourcesContent":["import firebase from 'firebase/app'\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport { firebaseConf } from '../config';\n\n// Initialize Cloud Firestore through Firebase\nfirebase.initializeApp(firebaseConf);\n\nconst db = firebase.firestore();\n\nexport const realTimeUpdate = () => {\n    return (dispatch, getState) => {\n        db.collection(\"imageDocuments\").orderBy(\"createDate\")\n            .onSnapshot({\n                // Listen for document metadata changes\n                includeMetadataChanges: true\n            }, function (documentSnapshots) {\n\n                // console.log(\"Real time imageDocuments changes\")\n                // var hasPendingWrites = documentSnapshots.metadata.hasPendingWrites;\n\n                // console.log(`Has pending writes: ${hasPendingWrites}`)\n\n                // if (hasPendingWrites) {\n                //     return;\n                // }\n            \n\n                var documents = documentSnapshots.docs.map((dc) => {\n                    return {\n                        ...dc.data(),\n                        id: dc.id\n                    }\n                }).reverse();\n                dispatch({ type: 'GET_DOCUMENTS', documents });\n\n            });\n\n        firebase.auth().onAuthStateChanged(function (user) {\n\n            // console.log(\"Real time User changes\")\n            if (user) {\n                // User is signed in.\n                const { displayName, email, emailVerified, photoURL, isAnonymous, uid, providerData } = user;\n                dispatch({\n                    type: 'USER_LOGEDIN',\n                    user: { displayName, email, emailVerified, photoURL, isAnonymous, uid, providerData }\n                });\n            } else {\n                dispatch({\n                    type: 'USER_LOGEDOUT'\n                });\n            }\n        });\n    }\n}\n\nexport const createDocument = (document) => {\n    return (dispatch, getState) => {\n\n        dispatch({\n            type: 'CREATE_DOCUMENT',\n            loading: true\n        });\n        // make async call to database\n        db.collection(\"imageDocuments\").add(document)\n            .then((response) => {\n                dispatch({\n                    type: 'CREATE_DOCUMENT',\n                    document: {\n                        ...document,\n                        id: response.id\n                    }\n                });\n            }).catch((error) => {\n                dispatch({\n                    type: 'CREATE_DOCUMENT',\n                    error: error\n                });\n            })\n    }\n};\n\nexport const getDocuments = () => {\n    return (dispatch, getState) => {\n        // make async call to database\n        dispatch({ type: 'GET_DOCUMENTS', loading: true });\n\n        db.collection(\"imageDocuments\")\n            .orderBy(\"createDate\").get().then(function (documentSnapshots) {\n\n                var documents = documentSnapshots.docs.map((dc) => {\n                    return {\n                        ...dc.data(),\n                        id: dc.id\n                    }\n                }).reverse();\n\n                dispatch({ type: 'GET_DOCUMENTS', documents });\n\n            }).catch((error) => {\n                dispatch({ type: 'GET_DOCUMENTS', error: error });\n            })\n    }\n};\n\nexport const deleteDocument = (document) => {\n    return (dispatch, getState) => {\n\n        dispatch({\n            type: 'DELETE_DOCUMENT', loading: true\n        });\n        // make async call to database\n        db.collection(\"imageDocuments\").doc(document.id).delete()\n            .then((response) => {\n                dispatch({\n                    type: 'DELETE_DOCUMENT',\n                    document\n                });\n            }).catch((error) => {\n                dispatch({\n                    type: 'DELETE_DOCUMENT',\n                    error: error\n                });\n            })\n    }\n};\n\nexport const getDocument = (id) => {\n    return (dispatch, getState) => {\n\n        // make async call to database\n        dispatch({ type: 'GET_DOCUMENT', loading: true });\n        db.collection(\"imageDocuments\")\n            .doc(id).get()\n            .then(function (documentSnapshots) {\n                dispatch({ type: 'GET_DOCUMENT', document: { id: documentSnapshots.id, ...documentSnapshots.data() } })\n\n            }).catch((error) => {\n                dispatch({ type: 'GET_DOCUMENT', erorr: error });\n                console.log(error);\n            })\n    }\n}\n\nexport const editDocument = (document) => {\n    return (dispatch, getState) => {\n\n        // // make async call to database\n        db.collection(\"imageDocuments\").doc(document.id).update(document)\n            .then((response) => {\n\n            }).catch((error) => {\n                dispatch({ type: 'GET_DOCUMENTS_SERVER_ERROR' });\n            })\n    }\n}\n\nexport const login = (credentials) => {\n    return (dispatch, getState) => {\n\n        // const firebase = getFirebase();\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then((e) => {\n\n            // console.log(e.user)\n            if (e.user) {\n                // User is signed in.\n                const { displayName, email, emailVerified, photoURL, isAnonymous, uid, providerData } = e.user;\n                dispatch({\n                    type: 'USER_LOGEDIN',\n                    user: { displayName, email, emailVerified, photoURL, isAnonymous, uid, providerData }\n                });\n            }\n        }).catch((err) => {\n            console.log(\"Login error\")\n        });\n    }\n}\n\nexport const logout = () => {\n    return (dispatch, getState) => {\n        firebase.auth().signOut().then(() => {\n            dispatch({\n                type: 'USER_LOGEDOUT'\n            });\n        }).catch((err) => {\n            console.log(\"Logout error\")\n        });\n    }\n}","\nexport const firebaseConf = {\n    apiKey: \"AIzaSyDYefnvwm3HhhnufJ0X6TDmduJ9m8lcdbg\",\n    authDomain: \"p-project-6eb83.firebaseapp.com\",\n    databaseURL: \"https://p-project-6eb83.firebaseio.com\",\n    projectId: \"p-project-6eb83\",\n    storageBucket: \"p-project-6eb83.appspot.com\",\n    messagingSenderId: \"571066696652\",\n    appId: \"1:571066696652:web:a2f2aa637e6c7e4a\",\n    userProfile: null\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { deleteDocument } from '../store/actions';\nimport { Link } from 'react-router-dom';\n\nclass imgThumb extends Component {\n\n    onClickHandler = (e) => {\n        this.props.deleteDocument(this.props.image);\n    }\n\n    render() {\n        const { id, url, title, content } = this.props.image;\n        return (\n            <div className=\"img-thumb\">\n\n\n                <img src={url} alt={title} />\n\n                <div className=\"img-thumb-info-container\">\n                    <h5>{title} - {id}</h5>\n                    <p>{content}</p>\n                    <button className=\"btn-primary\" onClick={this.onClickHandler}>Delete</button>\n                    <Link className=\"btn-primary\" to={'edit/' + id}>Edit</Link>\n                </div>\n            </div>\n        )\n    }\n\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        deleteDocument: (document) => dispatch(deleteDocument(document))\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(imgThumb);\n\n","import React, {Component} from 'react';\n\nimport ImgThumb from './imgThumb.component';\n\n\nclass ImgList extends Component {\n    render(){\n        const {list} = this.props;\n        return (\n            <div>\n                {list && list.map((img) => (<ImgThumb image={img} key={img.id}/>))}\n            </div>\n        )\n    }\n}\n\nexport default ImgList;","import React from 'react'\nimport '../styles/_loader.scss' \n\nconst LinearLoader = props => {\n    return (\n        <div className=\"load-bar\">\n            <div className=\"bar\"></div><div className=\"bar\"></div><div className=\"bar\"></div>\n        </div>\n    )\n}\n\nexport default LinearLoader\n","import React, { Component } from 'react';\nimport ImgList from '../imgList.component'\nimport { connect } from 'react-redux'\nimport { getDocuments } from '../../store/actions'\nimport { Redirect } from 'react-router-dom'\n\nimport LinearLoader from \"../linearLoader.component\";\n\nclass DashboardPage extends Component {\n\n    componentWillMount() {\n        this.props.getDocuments();\n    }\n\n    render() {\n        const { list, loading, serverError } = this.props;\n\n        if (!this.props.isAuth && this.props.authLoaded) {\n            return (<Redirect to='/login' />)\n        }\n\n        return (\n            <div>\n                {loading && (<LinearLoader />)}\n                <div className=\"container\">\n                    <br/>\n                    {serverError && (<div>Server error!</div>)}\n                    {list && (<ImgList list={list} />)}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProp = (state) => {\n    return {\n        list: state.document.getImageDocumensStore.getDocuments(),\n        loading: state.document.getImageDocumensStore.isLoading(),\n        serverError: state.document.getImageDocumensStore.getServerError(),\n        isAuth: state.auth.authUserStore.isUserAuth(),\n        authLoaded: state.auth.authUserStore.isLoaded()\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getDocuments: () => dispatch(getDocuments())\n    }\n}\n\nexport default connect(mapStateToProp, mapDispatchToProps)(DashboardPage);","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { createDocument } from '../../store/actions'\nimport Dropzone from 'react-dropzone'\nimport { Redirect } from 'react-router-dom'\n\nclass AddDocumentPage extends Component {\n\n    state = {\n        title: '',\n        content: '',\n        url: ''\n    }\n\n    onInputChange = (e) => {\n        this.setState({ [e.target.id]: e.target.value });\n    }\n\n    onInputFileInput = (selectedFiles) => {\n\n        let state = this;\n        if (selectedFiles.length > 0) {\n            const file = selectedFiles[0];\n            let reader = new FileReader();\n            reader.readAsDataURL(file);\n            reader.onload = function () {\n                state.setState({ url: reader.result })\n            };\n            reader.onerror = function (error) {\n                console.log('Error: ', error);\n            };\n        }\n    }\n\n    onFormSubmit = (e) => {\n        e.preventDefault();\n\n        // const id = new Date().getTime()\n        const newDocument = { ...this.state, createDate: new Date().getTime() };\n\n        this.setState({\n            title: '',\n            content: '',\n            url: ''\n        });\n\n        this.props.createDocument({ ...newDocument })\n        this.props.history.push('/');\n    }\n\n    render() {\n\n        const { title, content, url } = this.state;\n\n        if (!this.props.isAuth && this.props.authLoaded) {\n            return (<Redirect to='/login' />)\n        }\n\n        return (\n            <div className=\"container\">\n                <h1 className=\"md-form-title\">Add to gallery</h1>\n                <form className=\"md-form-container\" onSubmit={this.onFormSubmit}>\n                    <Dropzone\n                        onDrop={this.onInputFileInput}>\n                        {({ getRootProps, getInputProps, isDragActive, isDragReject, rejectedFiles }) => (\n\n                            <div {...getRootProps()}>\n                                {isDragActive && (<span>Is drag active</span>)}\n                                {isDragReject && (<span>Is drag reject</span>)}\n                                {rejectedFiles && (<span>Rejected files</span>)}\n\n                                <div className=\"md-input-container\">\n                                    <label htmlFor=\"title\">Title: </label>\n                                    <input type=\"text\" id=\"title\" value={title} onChange={this.onInputChange} />\n                                </div>\n                                <div className=\"md-input-container\">\n                                    <label htmlFor=\"content\">Description: </label>\n                                    <input type=\"text\" id=\"content\" value={content} onChange={this.onInputChange} />\n                                </div>\n                                <div className=\"md-input-container\">\n                                    <label htmlFor=\"url\">Url: </label>\n                                    <input type=\"text\" id=\"url\" value={url} onChange={this.onInputChange} />\n                                </div>\n\n                                {url && (\n                                    <div>\n                                        <img src={url} alt={title} style={{width: '100%'}}/>\n                                    </div>\n                                )}\n                            </div>\n                        )}\n                    </Dropzone>\n                    <div className=\"md-input-container\">\n                        <label htmlFor=\"file\">File: </label>\n                        <input\n                            type=\"file\"\n                            id=\"file\"\n                            onChange={(e) => this.onInputFileInput(e.target.files)} />\n                    </div>\n\n                    <button className=\"btn-primary\" type=\"submit\">add</button>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        createDocument: (document) => dispatch(createDocument(document))\n    }\n}\n\nconst mapStateToParams = state => {\n    return {\n        isAuth: state.auth.authUserStore.isUserAuth(),\n        authLoaded: state.auth.authUserStore.isLoaded()\n    }\n}\n\nexport default connect(mapStateToParams, mapDispatchToProps)(AddDocumentPage);\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { getDocument, editDocument } from '../../store/actions'\nimport { Redirect } from 'react-router-dom';\nimport LinearLoader from '../linearLoader.component';\n\nclass EditDocumentPage extends Component {\n\n    state = {\n        title: '',\n        content: '',\n        url: '',\n        id: ''\n    }\n\n    componentWillReceiveProps = (nextProps) => {\n        if (nextProps.getImageDocumentStore && nextProps.getImageDocumentStore.imgDoc) {\n            const { title, content, url, id } = nextProps.getImageDocumentStore.imgDoc;\n            this.setState({ title, content, url, id });\n        }\n    }\n\n    componentWillMount = (e) => {\n        this.props.getDocument(this.props.match.params.id);\n    }\n\n    onInputChange = (e) => {\n        this.setState({ [e.target.id]: e.target.value });\n    }\n\n    onFormSubmit = (e) => {\n        e.preventDefault();\n\n        const { title, content, id } = this.state;\n        const newDocument = { title, content, id };\n\n        this.setState({\n            title: '',\n            content: '',\n            url: '',\n            id: ''\n        });\n\n        this.props.editDocument({ ...newDocument })\n        this.props.history.push('/');\n    }\n\n    render() {\n\n        const { getImageDocumentStore } = this.props;\n        const { title, content, url } = this.state;\n\n        if (!this.props.isAuth && this.props.authLoaded) {\n            return (<Redirect to='/login' />)\n        }\n\n        return (\n            <React.Fragment>\n                {!getImageDocumentStore.isLoaded() && (<LinearLoader />)}\n                <div className=\"container\">\n\n\n\n                    {getImageDocumentStore.hasServerError() && (<div>Server error!</div>)}\n\n                    {\n                        getImageDocumentStore.isLoaded() &&\n                        (\n                            <React.Fragment>\n                                <h1 className=\"md-form-title\">Edit picture</h1>\n                                <form className=\"md-form-container\" onSubmit={this.onFormSubmit}>\n\n                                    <div className=\"md-input-container\">\n                                        <label htmlFor=\"title\">Title: </label>\n                                        <input type=\"text\" id=\"title\" value={title} onChange={this.onInputChange} />\n                                    </div>\n                                    <div className=\"md-input-container\">\n                                        <label htmlFor=\"content\">Description: </label>\n                                        <input type=\"text\" id=\"content\" value={content} onChange={this.onInputChange} />\n                                    </div>\n                                    <div>\n                                        <img src={url} alt={title} style={{ width: '100%' }} />\n                                    </div>\n                                    <button className=\"btn-primary\" type=\"submit\">edit</button>\n                                </form>\n                            </React.Fragment>\n                        )\n                    }\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        getDocument: (documentId) => dispatch(getDocument(documentId)),\n        editDocument: (document) => dispatch(editDocument(document))\n    }\n}\n\nconst mapStateToProps = (state) => {\n\n    return {\n        isloaded: state.document.getImageDocumentStore.isLoaded(),\n        getImageDocumentStore: state.document.getImageDocumentStore,\n        isAuth: state.auth.authUserStore.isUserAuth(),\n        authLoaded: state.auth.authUserStore.isLoaded()\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditDocumentPage);\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { login } from '../../store/actions'\nimport { Redirect } from 'react-router-dom';\n\nclass LoginPage extends Component {\n\n    state = {\n        email: '',\n        password: ''\n    }\n\n    onInputChange = (e) => {\n        this.setState({ [e.target.id]: e.target.value })\n    }\n\n    onFormSubmit = (e) => {\n        e.preventDefault()\n        this.props.login({ email: this.state.email, password: this.state.password })\n    }\n\n    render() {\n\n        const { email, password } = this.state;\n\n        const { authLoaded, isAuth } = this.props;\n\n        if (authLoaded && isAuth) {\n            return (<Redirect to='/' />)\n        }\n\n        return (\n            <div className=\"container\">\n                <h1 className=\"md-form-title\">Login</h1>\n\n                <form className=\"md-form-container\" onSubmit={this.onFormSubmit}>\n\n                    <div className=\"md-input-container\">\n                        <label htmlFor=\"email\">Email: </label>\n                        <input type=\"email\" id=\"email\" value={email} onChange={this.onInputChange} />\n                    </div>\n                    <div className=\"md-input-container\">\n                        <label  htmlFor=\"Password\">Password: </label>\n                        <input type=\"password\" id=\"password\" value={password} onChange={this.onInputChange} />\n                    </div>\n\n                    <button className=\"btn-primary\" type=\"submit\">login</button>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        isAuth: state.auth.authUserStore.isUserAuth(),\n        authLoaded: state.auth.authUserStore.isLoaded()\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        login: (creds) => dispatch(login(creds)),\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage)","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom';\n\nimport { logout } from '../store/actions'\n\nclass LogoutLink extends Component {\n\n    logout = () => {\n        this.props.logout();\n    }\n    render() {\n        const { isAuth, isAuthLoaded } = this.props\n      \n        return (\n            <div className=\"md-toolbar\">\n                <div className=\"container\">\n\n                    <p className=\"md-branding pull-left\">\n                        <Link to=\"/\">\n                            Gallery\n                        </Link>\n                    </p>\n\n                    {isAuth && isAuthLoaded ? (\n                        <div className=\"md-toolbar-actions pull-right text-right\">\n\n                            <Link className=\"btn-primary\" to=\"/create\">Upload </Link>\n\n                            <a href='/#' className=\"btn-primary\" onClick={this.logout}>log out</a>\n                        </div>\n                    ) : (<React.Fragment />)}\n\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        logout: () => dispatch(logout()),\n    }\n}\nconst mapStateToProps = state => {\n    return {\n        isAuth: state.auth.authUserStore.isUserAuth(),\n        isAuthLoaded: state.auth.authUserStore.isLoaded()\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LogoutLink);","import React, { Component } from 'react';\nimport { connect } from 'react-redux'\nimport { HashRouter, Switch, Route } from 'react-router-dom'\nimport './App.scss';\n\nimport { realTimeUpdate } from './store/actions'\nimport DashboardPage from './components/pages/dashboard.page';\nimport AddDocumentPage from './components/pages/addDocument.page';\nimport EditDocumentPage from './components/pages/editDocument.page'\nimport LoginPage from './components/pages/login.page'\nimport LogoutLinkComponent from './components/logoutLink.component';\n\n\nclass App extends Component {\n\n  componentWillMount() {\n    this.props.realTimeUpdate();\n  }\n\n  render() {\n    return (\n      <HashRouter>\n        <div className=\"App\">\n          <div>\n            <LogoutLinkComponent />\n          </div>\n          <Switch>\n            <Route exact path='/login' component={LoginPage} />\n            <Route exact path='/' component={DashboardPage} />\n            <Route path='/create' component={AddDocumentPage} />\n            <Route path='/edit/:id' component={EditDocumentPage} />\n          </Switch>\n        </div>\n      </HashRouter>\n    );\n  }\n}\n\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    realTimeUpdate: () => dispatch(realTimeUpdate())\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\nclass BasicHttpResponse {\n\n    loading;\n\n    serverError;\n\n    _response;\n\n    constractor() {\n        this.loading = false;\n        this.serverError = '';\n        this._response = null;\n\n    }\n\n    setLoading() {\n        this.loading = true;\n        this.serverError = null;\n        this._response = null;\n    }\n\n    setServerError(error) {\n        this.loading = false;\n        this.serverError = error;\n        this._response = null;\n    }\n\n    setResponse(response) {\n        this.loading = false;\n        this.serverError = '';\n        this._response = response;\n    }\n\n    \n    isLoaded = () => {\n        return !this.loading;\n    }\n\n    isLoading = () => {\n        return this.loading;\n    }\n\n    getServerError = () => {\n        return this.serverError;\n    }\n\n    hasServerError = () => {\n        return this.isLoaded() && this.serverError !== '';\n    }\n\n}\n\nexport default BasicHttpResponse;","\nclass ImageDocument {\n\n    \n    title;\n    url;\n    id;\n    content;\n\n    constructor(title, url, id, content){\n        this.title = title;\n        this.url = url;\n        this.id = id;\n        this.content = content;\n    }\n\n    setImageDocument = (title, url, id, content) => {\n        this.title = title;\n        this.url = url;\n        this.id = id;\n        this.content = content;\n    \n    }\n}\n\nexport default ImageDocument;","import BasicHttpResponse from './basicHttpResponse';\nimport ImageDocument from './imageDocument';\n\nclass ImageDocumentResponse extends BasicHttpResponse{\n\n    imgDoc;\n\n    constructor(){\n        super();\n        this.imgDoc = new ImageDocument();\n    }\n\n    setImageDocument = (response) => {\n        this.setResponse(response)\n        const {title, url, id, content} = response\n        this.imgDoc.setImageDocument(title, url, id, content)\n    }\n\n}\n\nexport default ImageDocumentResponse;","import BasicHttpResponse from './basicHttpResponse';\nimport ImageDocument from './imageDocument';\n\nclass ImageDocumentsResponse extends BasicHttpResponse {\n\n    imgDocs;\n\n    constructor(){\n        super();\n        this.imgDocs = [];\n    }\n\n\n    removeItem (document)  {\n        this.imgDocs = this.imgDocs.filter((doc)=> doc.id !== document.id);\n    }\n\n    setImageDocuments  (response) {\n        this.setResponse(response)\n        this.imgDocs = response.map( (doc) => {\n            const {title, url, id, content} = doc\n            return new ImageDocument(title, url, id, content)\n        });\n    }\n\n    getDocuments = () => {\n        return this.imgDocs;\n    }\n\n    \n}\n\nexport default ImageDocumentsResponse;","import ImageDocumentResponse from '../models/imageDocumentResponse';\nimport ImageDocumentsResponse from '../models/imageDocumentsResponse';\nimport AuthUserResponse from '../models/authUserResponse';\n\nconst initState = {\n    list: [],\n    loading: false,\n    serverError: false,\n    logedUser: {},\n    isAuth: false,\n    authLoaded: false,\n\n\n    authUserStore: new AuthUserResponse(),\n    getImageDocumensStore: new ImageDocumentsResponse(),\n    getImageDocumentStore: new ImageDocumentResponse(),\n    deleteImageDocumentStore: new ImageDocumentResponse(),\n    editImageDocumentStore: new ImageDocumentResponse(),\n    createImageDocumentStore: new ImageDocumentResponse()\n}\n\nexport default initState ","import BasicHttpResponse from './basicHttpResponse';\n\nclass AuthUserResponse extends BasicHttpResponse {\n\n\n    displayName;\n    email; \n    emailVerified;\n    photoURL; \n    isAnonymous; \n    uid; \n    providerData;\n\n\n    setAuthUser (response) {\n        this.setResponse(response);\n        const { displayName, email, emailVerified, photoURL, isAnonymous, uid, providerData } = response;\n        this.displayName = displayName;\n        this.email = email;\n        this.emailVerified = emailVerified;\n        this.photoURL = photoURL;\n        this.isAnonymous = isAnonymous;\n        this.uid = uid;\n        this.providerData = providerData;\n    }\n\n    logOut () {\n        this.displayName = null;\n        this.email = null;\n        this.emailVerified = null;\n        this.photoURL = null;\n        this.isAnonymous = null;\n        this.uid = null;\n        this.providerData = null;\n    }\n    isUserAuth = () =>{\n        return this.uid !== null\n    }\n\n}\n\nexport default AuthUserResponse;","import initState from './store';\n\n\nconst documentReducer = (state = initState, action) => {\n\n    switch (action.type) {\n\n        case \"USER_LOGEDIN\":\n            return {\n                ...state,\n                logedUser: action.user,\n                isAuth: true,\n                authLoaded: true\n            }\n        case \"USER_LOGEDOUT\":\n            return {\n                ...state,\n                logedUser: {},\n                isAuth: false,\n                authLoaded: true\n            }\n        case \"DELETE_DOCUMENT\":{\n\n            const {deleteImageDocumentStore} = state;\n\n            if(action.loading){\n                deleteImageDocumentStore.setLoading();\n            }else if(action.document){\n                deleteImageDocumentStore.setImageDocument(action.document);\n            }else if(action.error){\n                deleteImageDocumentStore.setServerError(action.error);\n            }\n\n            return {\n                ...state,\n                deleteImageDocumentStore\n            }\n\n        }\n            \n        case \"GET_DOCUMENT\": {\n            const { getImageDocumentStore } = state;\n\n            if (action.loading) {\n                getImageDocumentStore.setLoading();\n            }else if(action.document){\n                getImageDocumentStore.setImageDocument(action.document)\n            }else if(action.error){\n                getImageDocumentStore.setServerError(action.error);\n            }\n            return {\n                ...state,\n                getImageDocumentStore\n            }\n        }\n    \n        case \"GET_DOCUMENTS\":{\n            const { getImageDocumensStore } = state;\n            if(action.loading){\n                getImageDocumensStore.setLoading();\n            }else if (action.documents){\n                getImageDocumensStore.setImageDocuments(action.documents)\n            }else if (action.error){\n                getImageDocumensStore.setServerError(action.error);\n            }\n            return {\n                ...state,\n                getImageDocumensStore\n            }\n        }\n            \n        case \"CREATE_DOCUMENT\":{\n            \n            const {createImageDocumentStore} = state;\n            if(action.loading){\n                createImageDocumentStore.setLoading();\n            }else if (action.documents){\n                createImageDocumentStore.setImageDocuments(action.documents)\n            }else if (action.error){\n                createImageDocumentStore.setServerError(action.error);\n            }\n            return {\n                ...state,\n                createImageDocumentStore\n            }\n        }\n            \n        default:\n            return state\n    }\n}\n\nexport default documentReducer;","import initState from './store';\n\n\nconst authReducer = (state = initState, action) => {\n\n    switch (action.type) {\n\n        case \"USER_LOGEDIN\": {\n            const { authUserStore } = state\n            authUserStore.setAuthUser(action.user);\n            return {\n                ...state,\n                authReducer\n            }\n        }\n        case \"USER_LOGEDOUT\": {\n            const { authUserStore } = state\n            authUserStore.logOut();\n            return {\n                ...state,\n                authReducer\n            }\n        }\n        default:\n            return state\n    }\n}\n\nexport default authReducer;","import { combineReducers } from 'redux';\nimport documentReducer from './documents.reducer';\nimport authReducer from './auth.reducer';\n\nconst rootReducer = combineReducers({\n  document: documentReducer,\n  auth: authReducer\n});\n\nexport default rootReducer\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport rootReducer from './store/root.reducer';\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}